[{"D:\\domPro\\food-order-app\\src\\index.js":"1","D:\\domPro\\food-order-app\\src\\components\\navbar\\Navbar.js":"2","D:\\domPro\\food-order-app\\src\\components\\navbar\\navItems.js":"3","D:\\domPro\\food-order-app\\src\\redux\\createStore.js":"4","D:\\domPro\\food-order-app\\src\\redux\\allReducers.js":"5","D:\\domPro\\food-order-app\\src\\components\\pages\\pageReducer.js":"6","D:\\domPro\\food-order-app\\src\\components\\pages\\pageTypes.js":"7","D:\\domPro\\food-order-app\\src\\components\\pages\\MenuItems.js":"8","D:\\domPro\\food-order-app\\src\\components\\pages\\products\\Items.js":"9","D:\\domPro\\food-order-app\\src\\components\\pages\\pageActions.js":"10","D:\\domPro\\food-order-app\\src\\components\\cart\\MainCart.js":"11","D:\\domPro\\food-order-app\\src\\components\\cart\\carts\\cartItem.js":"12","D:\\domPro\\food-order-app\\src\\components\\cart\\carts\\CartItem.js":"13"},{"size":963,"mtime":1642572720494,"results":"14","hashOfConfig":"15"},{"size":1653,"mtime":1642417878215,"results":"16","hashOfConfig":"15"},{"size":335,"mtime":1642019195021,"results":"17","hashOfConfig":"15"},{"size":242,"mtime":1642219970749,"results":"18","hashOfConfig":"15"},{"size":201,"mtime":1642139698165,"results":"19","hashOfConfig":"15"},{"size":2827,"mtime":1647058305207,"results":"20","hashOfConfig":"15"},{"size":193,"mtime":1642418249690,"results":"21","hashOfConfig":"15"},{"size":577,"mtime":1642311702476,"results":"22","hashOfConfig":"15"},{"size":986,"mtime":1642417846394,"results":"23","hashOfConfig":"15"},{"size":653,"mtime":1642418239046,"results":"24","hashOfConfig":"15"},{"size":931,"mtime":1642449839436,"results":"25","hashOfConfig":"15"},{"size":475,"mtime":1642417166977,"results":"26","hashOfConfig":"15"},{"size":1474,"mtime":1642570505278,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gjrrvf",{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},"D:\\domPro\\food-order-app\\src\\index.js",[],"D:\\domPro\\food-order-app\\src\\components\\navbar\\Navbar.js",["60","61"],"import React, { useState } from \"react\";\r\nimport logo from \"../../assets/logo1.jpeg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../styles/navbar.css\";\r\nimport { NavItems } from \"./navItems.js\";\r\nimport AddShoppingCartIcon from \"@mui/icons-material/AddShoppingCart\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Navbar({ cartItems }) {\r\n  const [active, setActive] = useState(false);\r\n  const handleClick = () => {\r\n    setActive(!active);\r\n  };\r\n  const countOnlyQtyField = (total, currentItem) => total + currentItem.qty;\r\n  const cartLength = cartItems.reduce(countOnlyQtyField, 0);\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <label className=\"logo\">\r\n        <img src={logo} />\r\n        {/* Brand Name */}\r\n      </label>\r\n      <a href=\"#\" className=\"toggle-button\" onClick={handleClick}>\r\n        <span className=\"bar\"></span>\r\n        <span className=\"bar\"></span>\r\n        <span className=\"bar\"></span>\r\n      </a>\r\n      <div className={`${active ? \"active\" : null} navbar-links`}>\r\n        <ul>\r\n          {NavItems.map((item) => {\r\n            return (\r\n              <li>\r\n                <Link to={item.url} className={item.cls}>\r\n                  {item.title}\r\n                </Link>\r\n              </li>\r\n            );\r\n          })}\r\n          <li>\r\n            <Link to={\"/cart\"} className=\"navitems\">\r\n              <AddShoppingCartIcon />\r\n              {cartLength}\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cartItems: state.page.cart,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Navbar);\r\n","D:\\domPro\\food-order-app\\src\\components\\navbar\\navItems.js",[],["62","63"],"D:\\domPro\\food-order-app\\src\\redux\\createStore.js",[],"D:\\domPro\\food-order-app\\src\\redux\\allReducers.js",[],"D:\\domPro\\food-order-app\\src\\components\\pages\\pageReducer.js",["64","65","66","67","68","69","70","71","72"],"import * as actionTypes from \"./pageTypes\";\r\n\r\nconst default_state = {\r\n  items: [\r\n    {\r\n      id: 1,\r\n      title: \"Veg Thali\",\r\n      price: 80,\r\n      details:\r\n        \"The vegetarian Kerala style lunch consists of boiled rice along with five varities of traditional dishes. \",\r\n      image:\r\n        \"https://5.imimg.com/data5/HU/PG/OE/SELLER-9770898/special-veg-thali-500x500.jpg\",\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Home made lunch Thali (Non-Veg)\",\r\n      price: 120,\r\n      details:\r\n        \"Home made thali contains plain rice, Dal, Kosha murgir mangsho with alu sobji, alu vaja, papad and chatni.\",\r\n      image:\r\n        \"https://4.imimg.com/data4/UU/FC/ANDROID-28469914/product-500x500.jpeg\",\r\n    },\r\n    {\r\n      id: 3,\r\n      title: \"The third Item\",\r\n      price: 125,\r\n      details:\r\n        \"Indian, Seafood, Asian, Vegetarian Friendly, Vegan Options, Lunch, Dinner\",\r\n      image:\r\n        \"https://media-cdn.tripadvisor.com/media/photo-s/18/de/30/ce/img-20190819-144555-01.jpg\",\r\n    },\r\n  ], // {id, title, price, details, img}\r\n  cart: [], // {id, title, price, details, img, qty}\r\n  currentItem: null,\r\n};\r\n\r\nconst pageReducer = (state = default_state, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_TO_CART:\r\n      const item = state.items.find((item) => item.id == action.payload.id);\r\n      const inCart = state.cart.find(\r\n        (cartItem) => cartItem.id == action.payload.id\r\n      );\r\n      return {\r\n        ...state,\r\n        cart: inCart\r\n          ? state.cart.map((cartItem) =>\r\n              cartItem.id === item.id\r\n                ? { ...cartItem, qty: cartItem.qty + 1 }\r\n                : cartItem\r\n            )\r\n          : [...state.cart, { ...item, qty: 1 }],\r\n      };\r\n      break;\r\n    case actionTypes.REMOVE_FROM_CART:\r\n      const findItemFromCart = state.cart.find(\r\n        (item) => item.id == action.payload.id\r\n      );\r\n      const findTheIndex = state.cart.indexOf(findItemFromCart);\r\n      const copyPreviousItems = state.cart.slice(0, findTheIndex);\r\n      const copyNextItems = state.cart.slice(findTheIndex + 1);\r\n      const newCopiedCart = copyPreviousItems.concat(copyNextItems);\r\n      return {\r\n        ...state,\r\n        cart: newCopiedCart,\r\n      };\r\n      break;\r\n    case actionTypes.UPDATE_QTY:\r\n      // const findTheIndexInCart = state.cart.find((item)=>{\r\n      //   item.id == action.payload.id\r\n      // })\r\n      // const\r\n      return {\r\n        ...state,\r\n        cart: state.cart.map((item) =>\r\n          item.id == action.payload.id\r\n            ? { ...item, qty: parseInt(action.payload.qty) }\r\n            : item\r\n        ),\r\n      };\r\n      break;\r\n    case actionTypes.LOAD_CLICKED_ITEM:\r\n      return {};\r\n      break;\r\n    default:\r\n      return state;\r\n      break;\r\n  }\r\n};\r\nexport default pageReducer;\r\n","D:\\domPro\\food-order-app\\src\\components\\pages\\pageTypes.js",[],"D:\\domPro\\food-order-app\\src\\components\\pages\\MenuItems.js",["73"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport pageReducer from \"./pageReducer\";\r\nimport Items from \"./products/Items\";\r\nimport \"../../styles/Items.css\";\r\n\r\nfunction MenuItems({ items }) {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        {items.map((item) => {\r\n          return <Items key={item.id} items={item} />;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    items: state.page.items,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, null)(MenuItems);\r\n","D:\\domPro\\food-order-app\\src\\components\\pages\\products\\Items.js",["74"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"@mui/material/Button\";\r\nimport AddShoppingCartIcon from \"@mui/icons-material/AddShoppingCart\";\r\nimport { connect } from \"react-redux\";\r\nimport { addToCart } from \"../pageActions\";\r\n\r\nfunction Items({ items, addToCart }) {\r\n  console.log(addToCart);\r\n  return (\r\n    <div className=\"card\">\r\n      <img className=\"item-image\" src={items.image} />\r\n      <h4>{items.title}</h4>\r\n      <p className=\"details\">{items.details}</p>\r\n      <p className=\"price\">Rs. {items.price}</p>\r\n      <Link to={\"#\"}>\r\n        <Button className=\"btn\" variant=\"contained\">\r\n          ReadMore...\r\n        </Button>\r\n        <AddShoppingCartIcon onClick={() => addToCart(items.id)} />\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addToCart: function (id) {\r\n      dispatch(addToCart(id));\r\n    },\r\n  };\r\n};\r\nexport default connect(null, mapDispatchToProps)(Items);\r\n","D:\\domPro\\food-order-app\\src\\components\\pages\\pageActions.js",[],"D:\\domPro\\food-order-app\\src\\components\\cart\\MainCart.js",[],"D:\\domPro\\food-order-app\\src\\components\\cart\\carts\\cartItem.js",[],"D:\\domPro\\food-order-app\\src\\components\\cart\\carts\\CartItem.js",["75"],"import React, { useState } from \"react\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport { removeFromCart, updateQty } from \"../../pages/pageActions\";\r\n\r\nfunction CartItem({ items, deleteCartItem, updateItemQty }) {\r\n  const [input, setInput] = useState(items.qty);\r\n  const onChangeHandler = (e) => {\r\n    setInput(e.target.value);\r\n    let currentQty = e.target.value;\r\n    console.log(currentQty);\r\n    updateItemQty(items.id, currentQty);\r\n  };\r\n  return (\r\n    <div className=\"card\">\r\n      <img className=\"item-image\" src={items.image} />\r\n      <h4>{items.title}</h4>\r\n      <p className=\"details\">{items.details}</p>\r\n      <p className=\"price\">Rs. {items.price}</p>\r\n      <div className=\"cart_qty\">\r\n        <label>Quantity</label>\r\n        <input\r\n          min={1}\r\n          type=\"number\"\r\n          value={input}\r\n          name=\"qty\"\r\n          onChange={onChangeHandler}\r\n        />\r\n      </div>\r\n      <Button\r\n        onClick={() => {\r\n          deleteCartItem(items.id);\r\n        }}\r\n      >\r\n        <DeleteIcon />\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deleteCartItem: function (id) {\r\n      dispatch(removeFromCart(id));\r\n    },\r\n    updateItemQty: function (id, value) {\r\n      dispatch(updateQty(id, value));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(CartItem);\r\n",{"ruleId":"76","severity":1,"message":"77","line":19,"column":9,"nodeType":"78","endLine":19,"endColumn":27},{"ruleId":"79","severity":1,"message":"80","line":22,"column":7,"nodeType":"78","endLine":22,"endColumn":67},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":40,"column":55,"nodeType":"87","messageId":"88","endLine":40,"endColumn":57},{"ruleId":"85","severity":1,"message":"86","line":42,"column":35,"nodeType":"87","messageId":"88","endLine":42,"endColumn":37},{"ruleId":"89","severity":1,"message":"90","line":54,"column":7,"nodeType":"91","messageId":"92","endLine":54,"endColumn":13},{"ruleId":"85","severity":1,"message":"86","line":57,"column":27,"nodeType":"87","messageId":"88","endLine":57,"endColumn":29},{"ruleId":"89","severity":1,"message":"90","line":67,"column":7,"nodeType":"91","messageId":"92","endLine":67,"endColumn":13},{"ruleId":"85","severity":1,"message":"86","line":76,"column":19,"nodeType":"87","messageId":"88","endLine":76,"endColumn":21},{"ruleId":"89","severity":1,"message":"90","line":81,"column":7,"nodeType":"91","messageId":"92","endLine":81,"endColumn":13},{"ruleId":"89","severity":1,"message":"90","line":84,"column":7,"nodeType":"91","messageId":"92","endLine":84,"endColumn":13},{"ruleId":"89","severity":1,"message":"90","line":87,"column":7,"nodeType":"91","messageId":"92","endLine":87,"endColumn":13},{"ruleId":"93","severity":1,"message":"94","line":3,"column":8,"nodeType":"95","messageId":"96","endLine":3,"endColumn":19},{"ruleId":"76","severity":1,"message":"77","line":12,"column":7,"nodeType":"78","endLine":12,"endColumn":55},{"ruleId":"76","severity":1,"message":"77","line":17,"column":7,"nodeType":"78","endLine":17,"endColumn":55},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","no-native-reassign",["97"],"no-negated-in-lhs",["98"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-unused-vars","'pageReducer' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]